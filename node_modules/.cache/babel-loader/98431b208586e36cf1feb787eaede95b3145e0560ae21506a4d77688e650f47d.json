{"ast":null,"code":"const initialState = {\n  user: null\n};\nconst userReducer = (state = initialState, action) => {\n  switch (action === null || action === void 0 ? void 0 : action.type) {\n    case 'login':\n      // Ensure action.payload exists before updating the state\n      if (action.payload) {\n        return {\n          ...state,\n          user: action.payload\n        };\n      }\n      // Handle the case when action.payload is not provided or invalid\n      return state;\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["initialState","user","userReducer","state","action","type","payload"],"sources":["/Users/mohanprasadnaraganti/Desktop/Fall-23/AdvWebProgramming/MedTrust/frontend/src/reducers/userReducer.js"],"sourcesContent":["const initialState = {\n    user: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n    switch (action?.type) {\n        case 'login':\n            // Ensure action.payload exists before updating the state\n            if (action.payload) {\n                return {\n                    ...state,\n                    user: action.payload,\n                };\n            }\n            // Handle the case when action.payload is not provided or invalid\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAClD,QAAQA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI;IAChB,KAAK,OAAO;MACR;MACA,IAAID,MAAM,CAACE,OAAO,EAAE;QAChB,OAAO;UACH,GAAGH,KAAK;UACRF,IAAI,EAAEG,MAAM,CAACE;QACjB,CAAC;MACL;MACA;MACA,OAAOH,KAAK;IAEhB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}